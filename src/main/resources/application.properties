#thymeleaf
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false
spring.thymeleaf.content-type=text/html
spring.thymeleaf.enabled=true
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML5
# mybatis
mybatis.type-aliases-package=com.syliu.miaosha.domain
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=3000
mybatis.mapperLocations = classpath:com/syliu/miaosha/dao/*.xml
# druid
spring.datasource.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=123
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.filters=stat
spring.datasource.maxActive=1000
spring.datasource.initialSize=100
spring.datasource.maxWait=60000
spring.datasource.minIdle=500
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxOpenPreparedStatements=20
#redis
redis.host=ubuntu1
redis.port=6379
redis.timeout=10
redis.password=123
redis.poolMaxTotal=2000
redis.poolMaxIdle=1000
redis.poolMaxWait=1000

spring.resources.add-mappings=true
spring.resources.cache.period= 3600
spring.resources.chain.cache=true 
spring.resources.chain.enabled=true
spring.resources.chain.compressed=true
spring.resources.chain.html-application-cache=true
spring.resources.static-locations=classpath:/static/

spring.rabbitmq.host=ubuntu1
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/
#?????
spring.rabbitmq.listener.simple.concurrency= 10
spring.rabbitmq.listener.simple.max-concurrency= 10
#???????????????
spring.rabbitmq.listener.simple.prefetch= 1
#???????
spring.rabbitmq.listener.simple.auto-startup=true
#???????????
spring.rabbitmq.listener.simple.default-requeue-rejected= true
#??????
spring.rabbitmq.template.retry.enabled=true
spring.rabbitmq.template.retry.initial-interval=1000
spring.rabbitmq.template.retry.max-attempts=3
spring.rabbitmq.template.retry.max-interval=10000
spring.rabbitmq.template.retry.multiplier=1.0


###########?Kafka???###########
spring.kafka.bootstrap-servers=localhost:9092
###########??????????###########
# ????
spring.kafka.producer.retries=0
# ????:??????????????????ack??(??0?1?all/-1)
spring.kafka.producer.acks=1
# ????
spring.kafka.producer.batch-size=16384
# ????
spring.kafka.producer.properties.linger.ms=0
# ???????????batch-size??????linger.ms?,???????????kafka
# linger.ms?0??????????????kafka,???batch-size??????

# ????????
spring.kafka.producer.buffer-memory = 33554432
# Kafka????????????
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# ??????
# spring.kafka.producer.properties.partitioner.class=com.felix.kafka.producer.CustomizePartitioner

###########??????????###########
# ??????ID
spring.kafka.consumer.properties.group.id=defaultConsumerGroup
# ??????offset
spring.kafka.consumer.enable-auto-commit=true
# ??offset??(??????????offset)
spring.kafka.consumer.auto.commit.interval.ms=1000
# ?kafka?????offset?offset??????????offset
# earliest:?????????offset;
# latest:?????????offset(???????????);
# none:??????????????offset,?????;
spring.kafka.consumer.auto-offset-reset=latest
# ????????(??????consumer??????,????rebalance??)
spring.kafka.consumer.properties.session.timeout.ms=120000
# ????????
spring.kafka.consumer.properties.request.timeout.ms=180000
# Kafka????????????
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# ??????topic????????????(??)
spring.kafka.listener.missing-topics-fatal=false
# ??????
# spring.kafka.listener.type=batch
# ???????????????
# spring.kafka.consumer.max-poll-records=50

#acutator
#management.security.enabled=true